name: telescope-incloud-PortScan-AllPort-Xray-dirscan

on:
  #    workflow_dispatch: 推送测试选择，完成后使用如下
  workflow_dispatch:
    inputs:
      searchDomain:
        description: "Please enter the domain name to be scanned"
        required: true
        default: "[ip]"
env:
  searchDomain: "${{ github.event.inputs.searchDomain }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Setup Dependencies
        run: sudo apt-get install libpcap-dev

      - name: Cache Go
        id: cache-go
        uses: actions/cache@v2
        with:
          path: /home/runner/go
          key: ${{ runner.os }}-go

      - name: Setting up ProjectDiscovery tools
        env:
          GO111MODULE: on
        run: |
          export GOPATH=/opt/hostedtoolcache/go/1.14.15/
          export PATH=$PATH:$GOPATH/bin
          export GOROOT=/opt/hostedtoolcache/go/1.14.15/x64
          export PATH=$PATH:$GOROOT/bin
          # nothing.
          ls -la /usr/local/
          ls /opt/hostedtoolcache/go/1.14.15/
          go get -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder
          go get -v github.com/projectdiscovery/dnsx/cmd/dnsx
          go get -v github.com/projectdiscovery/naabu/v2/cmd/naabu
          go get -v github.com/projectdiscovery/httpx/cmd/httpx
          go get -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei
          go get -u github.com/ffuf/ffuf
        shell: bash


      - name: Running naabu to check top all ports
        run: |
          echo "${{ env.searchDomain }}" > input/target.txt
          cat input/target.txt
          naabu -iL input/target.txt  -rate 10000 -p - | tee output/active_ports.txt
        shell: bash


      - name: Running httpx for HTTP webservers probbing
        run: |
          httpx -l output/active_ports.txt -title
          httpx -l output/active_ports.txt | tee output/active_urls.txt
        shell: bash

      - name: Xray scan urls
        run: |
          wget https://github.com/chaitin/xray/releases/download/1.7.1/xray_linux_amd64.zip
          unzip xray_linux_amd64.zip
          mv xray_linux_amd64 xray
          set +e ;for i in $(cat output/active_urls.txt ); do ./xray webscan --basic-crawler $i --html-output output/`date +%Y%m%d%H%M%S`.html;done
          cat output/*.html >> output/xray.html
        shell: bash

      - name: Running dirscan
        run: |
          wget https://raw.githubusercontent.com/maurosoria/dirsearch/master/db/dicc.txt
          mkdir dirout
          set +e ;time for i in $(cat output/active_urls.txt );do ffuf -w dicc.txt -u $i/FUZZ -t 200 -mc 200 -ac -recursion -v -of csv -o dirout/`date +%Y%m%d%H%M%S`.csv; done
          cat dirout/*.csv >> output/dirout.csv
        shell: bash

      - name: Sorting the output results
        run: |
          find output -type f -exec sort {} -o {} \;
          tar -czf ${{ env.searchDomain }}-attachments.tar.gz output
          ls -la
          echo "扫描完成，这里是附件" > result.html
        shell: bash

      - name: 'Send mail'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.yandex.com
          server_port: 465
          #username: ${{ secrets.MAIL_USERNAME }}
          #password: ${{ secrets.MAIL_PASSWORD }}
          username: ${{secrets.SENTRY_MAIL_USERNAME}}
          password: ${{secrets.SENTRY_MAIL_PASSWORD}}
          subject: "您的订阅信息"
          html_body: file://result.html
          to: bin4xin.sentrylab@qq.com
          #cc: chihou.pro@gmail.com
          from: 哨兵 - 望远镜
          content_type: text/html
          attachments: ${{ env.searchDomain }}-attachments.tar.gz